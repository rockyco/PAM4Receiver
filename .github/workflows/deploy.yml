name: Deploy PAM4 Receiver Website

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install dependencies
      run: |
        gem install jekyll bundler
        bundle init
        echo 'gem "jekyll"' >> Gemfile
        echo 'gem "jekyll-feed"' >> Gemfile
        echo 'gem "jekyll-sitemap"' >> Gemfile
        echo 'gem "jekyll-seo-tag"' >> Gemfile
        bundle install
        
    - name: Build Jekyll site
      run: |
        bundle exec jekyll build --baseurl=""
        
    - name: Optimize images
      run: |
        # Install image optimization tools
        npm install -g imagemin-cli imagemin-pngquant imagemin-mozjpeg
        
        # Optimize PNG images
        find _site/images -name "*.png" -exec imagemin {} --plugin=pngquant --out-dir=_site/images \;
        
        # Verify site structure
        ls -la _site/
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./_site

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  lighthouse:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ needs.deploy.outputs.page_url }}
          configPath: .github/workflows/lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true